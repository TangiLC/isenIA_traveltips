services:
  tt_mysql:
    image: mysql
    container_name: tt_mysql
    networks:
      - tt_network
    environment:
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
    ports:
      - 3307:3306
    volumes:
      - ./db:/var/lib/mysql
      - ./bdd:/docker-entrypoint-initdb.d
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  tt_admsql:
    image: adminer
    container_name: tt_admsql
    networks:
      - tt_network
    restart: always
    ports:
      - 8081:8080
    depends_on:
      tt_mysql:
        condition: service_healthy


  tt_mongo:
      image: mongo:7
      container_name: tt_mongo
      restart: always
      networks:
        - tt_network
      ports:
        - "27027:27017"
      environment:
        # Créer un utilisateur root
        - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
        - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
        # Base de données à créer au démarrage
        - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
      volumes:
        - mongo_data:/data/db
        - ./mongo-init:/docker-entrypoint-initdb.d  # Scripts d'initialisation
      healthcheck:
        test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
        interval: 10s
        timeout: 5s
        retries: 5

  tt_mgxp:
    image: mongo-express
    container_name: tt_mgxp
    restart: always
    networks:
      - tt_network
    ports:
      - 8082:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASSWORD}@tt_mongo:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD}
    depends_on:
      tt_mongo:
        condition: service_healthy

networks:
  tt_network:
    driver: bridge

volumes:
  mongo_data: